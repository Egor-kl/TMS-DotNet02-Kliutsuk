// <auto-generated />
using System;
using EasyMeeting.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EasyMeeting.DAL.Migrations
{
    [DbContext(typeof(EasyMeetingDbContext))]
    partial class EasyMeetingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EasyMeeting.DAL.Models.Meetings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsersId");

                    b.ToTable("Meetings");
                });

            modelBuilder.Entity("EasyMeeting.DAL.Models.Participiants", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MeetingsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MeetingsId");

                    b.ToTable("Participiants");
                });

            modelBuilder.Entity("EasyMeeting.DAL.Models.Profiles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsersId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("EasyMeeting.DAL.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Identity")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EasyMeeting.DAL.Models.Meetings", b =>
                {
                    b.HasOne("EasyMeeting.DAL.Models.Users", null)
                        .WithMany("Meetings")
                        .HasForeignKey("UsersId");
                });

            modelBuilder.Entity("EasyMeeting.DAL.Models.Participiants", b =>
                {
                    b.HasOne("EasyMeeting.DAL.Models.Meetings", "Meetings")
                        .WithMany("Participiants")
                        .HasForeignKey("MeetingsId");
                });

            modelBuilder.Entity("EasyMeeting.DAL.Models.Profiles", b =>
                {
                    b.HasOne("EasyMeeting.DAL.Models.Users", "Users")
                        .WithMany("Profiles")
                        .HasForeignKey("UsersId");
                });
#pragma warning restore 612, 618
        }
    }
}
